"use client"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Badge } from "@/components/ui/badge"
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Check, CheckCircle, Edit, Eye, FileText, MoreHorizontal, Search, Trash, User } from "lucide-react"
import { createClient } from "@/lib/supabase"
import Link from "next/link"

// Tipo para las órdenes de trabajo
interface WorkOrder {
  id: string
  asset: string
  type: string
  priority: string
  provider: string
  status: string
  date: string
  warranty: boolean
  assignedTo: string
  isAutoGenerated?: boolean
}

export function WorkOrdersList() {
  const [searchTerm, setSearchTerm] = useState("")
  const [workOrders, setWorkOrders] = useState<WorkOrder[]>([])
  const [isLoading, setIsLoading] = useState(true)

  useEffect(() => {
    async function loadWorkOrders() {
      try {
        setIsLoading(true)

        // Cargar órdenes de trabajo desde Supabase
        const supabase = createClient()
        const { data: serviceOrders, error } = await supabase
          .from("service_orders")
          .select("*")
          .order("created_at", { ascending: false })

        if (error) {
          console.error("Error al cargar órdenes de servicio:", error)
          throw error
        }

        // Convertir las órdenes de servicio al formato de órdenes de trabajo
        const formattedOrders: WorkOrder[] = serviceOrders.map((order: any) => ({
          id: order.order_id,
          asset: order.asset_name,
          type: order.type,
          priority: order.priority,
          provider: order.provider || "Interno",
          status: order.status,
          date: order.date,
          warranty: order.warranty || false,
          assignedTo: order.technician,
          isAutoGenerated: true,
        }))

        // Combinar con las órdenes de trabajo de ejemplo
        setWorkOrders([...formattedOrders, ...workOrdersExample])
      } catch (error) {
        console.error("Error al cargar órdenes de trabajo:", error)
        // Si hay un error, usar solo los datos de ejemplo
        setWorkOrders(workOrdersExample)
      } finally {
        setIsLoading(false)
      }
    }

    loadWorkOrders()
  }, [])

  const filteredOrders = workOrders.filter(
    (order) =>
      order.asset.toLowerCase().includes(searchTerm.toLowerCase()) ||
      order.id.toLowerCase().includes(searchTerm.toLowerCase()) ||
      order.provider.toLowerCase().includes(searchTerm.toLowerCase()) ||
      order.assignedTo.toLowerCase().includes(searchTerm.toLowerCase()),
  )

  return (
    <Card>
      <CardHeader>
        <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
          <CardTitle>Órdenes de Trabajo</CardTitle>
          <div className="relative w-full md:w-64">
            <Search className="absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground" />
            <Input
              type="search"
              placeholder="Buscar órdenes..."
              className="pl-8"
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
        </div>
      </CardHeader>
      <CardContent>
        <Tabs defaultValue="all" className="w-full">
          <TabsList className="mb-4">
            <TabsTrigger value="all">Todas</TabsTrigger>
            <TabsTrigger value="pending">Pendientes</TabsTrigger>
            <TabsTrigger value="inprogress">En Progreso</TabsTrigger>
            <TabsTrigger value="completed">Completadas</TabsTrigger>
            <TabsTrigger value="warranty">Garantías</TabsTrigger>
          </TabsList>
          <TabsContent value="all">
            <div className="rounded-md border">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>OT</TableHead>
                    <TableHead>Activo</TableHead>
                    <TableHead>Tipo</TableHead>
                    <TableHead>Prioridad</TableHead>
                    <TableHead>Proveedor</TableHead>
                    <TableHead>Estado</TableHead>
                    <TableHead>Fecha</TableHead>
                    <TableHead>Garantía</TableHead>
                    <TableHead className="text-right">Acciones</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {isLoading ? (
                    <TableRow>
                      <TableCell colSpan={9} className="h-24 text-center">
                        <div className="flex justify-center items-center h-full">
                          <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-primary"></div>
                          <span className="ml-2">Cargando órdenes...</span>
                        </div>
                      </TableCell>
                    </TableRow>
                  ) : filteredOrders.length === 0 ? (
                    <TableRow>
                      <TableCell colSpan={9} className="h-24 text-center">
                        No se encontraron órdenes de trabajo
                      </TableCell>
                    </TableRow>
                  ) : (
                    filteredOrders.map((order) => (
                      <TableRow key={order.id} className={order.isAutoGenerated ? "bg-green-50" : ""}>
                        <TableCell className="font-medium">
                          {order.id}
                          {order.isAutoGenerated && (
                            <Badge variant="outline" className="ml-2 bg-green-100 text-green-800">
                              Auto
                            </Badge>
                          )}
                        </TableCell>
                        <TableCell>{order.asset}</TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.type === "Preventivo"
                                ? "outline"
                                : order.type === "Correctivo"
                                  ? "destructive"
                                  : "secondary"
                            }
                          >
                            {order.type}
                          </Badge>
                        </TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.priority === "Crítica"
                                ? "destructive"
                                : order.priority === "Alta"
                                  ? "secondary"
                                  : "outline"
                            }
                          >
                            {order.priority}
                          </Badge>
                        </TableCell>
                        <TableCell>{order.provider}</TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.status === "Completado"
                                ? "default"
                                : order.status === "En progreso"
                                  ? "secondary"
                                  : order.status === "Cancelado"
                                    ? "destructive"
                                    : "outline"
                            }
                          >
                            {order.status}
                          </Badge>
                        </TableCell>
                        <TableCell>{formatDate(order.date)}</TableCell>
                        <TableCell>
                          {order.warranty ? <Check className="h-4 w-4 text-green-500" /> : <span>-</span>}
                        </TableCell>
                        <TableCell className="text-right">
                          <DropdownMenu>
                            <DropdownMenuTrigger asChild>
                              <Button variant="ghost" className="h-8 w-8 p-0">
                                <span className="sr-only">Abrir menú</span>
                                <MoreHorizontal className="h-4 w-4" />
                              </Button>
                            </DropdownMenuTrigger>
                            <DropdownMenuContent align="end">
                              <DropdownMenuLabel>Acciones</DropdownMenuLabel>
                              <DropdownMenuItem asChild>
                                <Link href={`/ordenes/${order.id}`}>
                                  <Eye className="mr-2 h-4 w-4" />
                                  <span>Ver detalles</span>
                                </Link>
                              </DropdownMenuItem>
                              <DropdownMenuItem>
                                <Edit className="mr-2 h-4 w-4" />
                                <span>Editar</span>
                              </DropdownMenuItem>
                              <DropdownMenuItem>
                                <FileText className="mr-2 h-4 w-4" />
                                <span>Ver documentos</span>
                              </DropdownMenuItem>
                              <DropdownMenuItem>
                                <CheckCircle className="mr-2 h-4 w-4" />
                                <span>Cambiar estado</span>
                              </DropdownMenuItem>
                              <DropdownMenuSeparator />
                              <DropdownMenuItem className="text-red-600">
                                <Trash className="mr-2 h-4 w-4" />
                                <span>Cancelar</span>
                              </DropdownMenuItem>
                            </DropdownMenuContent>
                          </DropdownMenu>
                        </TableCell>
                      </TableRow>
                    ))
                  )}
                </TableBody>
              </Table>
            </div>
          </TabsContent>
          <TabsContent value="pending">
            {/* Contenido similar para órdenes pendientes */}
            <div className="rounded-md border">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>OT</TableHead>
                    <TableHead>Activo</TableHead>
                    <TableHead>Tipo</TableHead>
                    <TableHead>Prioridad</TableHead>
                    <TableHead>Proveedor</TableHead>
                    <TableHead>Fecha</TableHead>
                    <TableHead className="text-right">Acciones</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {filteredOrders
                    .filter((order) => order.status === "Pendiente" || order.status === "Programado")
                    .map((order) => (
                      <TableRow key={order.id}>
                        <TableCell className="font-medium">{order.id}</TableCell>
                        <TableCell>{order.asset}</TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.type === "Preventivo"
                                ? "outline"
                                : order.type === "Correctivo"
                                  ? "destructive"
                                  : "secondary"
                            }
                          >
                            {order.type}
                          </Badge>
                        </TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.priority === "Crítica"
                                ? "destructive"
                                : order.priority === "Alta"
                                  ? "secondary"
                                  : "outline"
                            }
                          >
                            {order.priority}
                          </Badge>
                        </TableCell>
                        <TableCell>{order.provider}</TableCell>
                        <TableCell>{formatDate(order.date)}</TableCell>
                        <TableCell className="text-right">
                          <Button variant="ghost" size="sm" asChild>
                            <Link href={`/ordenes/${order.id}`}>
                              <Eye className="h-4 w-4" />
                            </Link>
                          </Button>
                        </TableCell>
                      </TableRow>
                    ))}
                </TableBody>
              </Table>
            </div>
          </TabsContent>
          <TabsContent value="inprogress">
            {/* Contenido similar para órdenes en progreso */}
            <div className="rounded-md border">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>OT</TableHead>
                    <TableHead>Activo</TableHead>
                    <TableHead>Tipo</TableHead>
                    <TableHead>Prioridad</TableHead>
                    <TableHead>Proveedor</TableHead>
                    <TableHead>Asignado a</TableHead>
                    <TableHead className="text-right">Acciones</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {filteredOrders
                    .filter((order) => order.status === "En progreso")
                    .map((order) => (
                      <TableRow key={order.id}>
                        <TableCell className="font-medium">{order.id}</TableCell>
                        <TableCell>{order.asset}</TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.type === "Preventivo"
                                ? "outline"
                                : order.type === "Correctivo"
                                  ? "destructive"
                                  : "secondary"
                            }
                          >
                            {order.type}
                          </Badge>
                        </TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.priority === "Crítica"
                                ? "destructive"
                                : order.priority === "Alta"
                                  ? "secondary"
                                  : "outline"
                            }
                          >
                            {order.priority}
                          </Badge>
                        </TableCell>
                        <TableCell>{order.provider}</TableCell>
                        <TableCell>
                          <div className="flex items-center gap-2">
                            <User className="h-4 w-4 text-muted-foreground" />
                            <span>{order.assignedTo}</span>
                          </div>
                        </TableCell>
                        <TableCell className="text-right">
                          <Button variant="ghost" size="sm" asChild>
                            <Link href={`/ordenes/${order.id}`}>
                              <Eye className="h-4 w-4" />
                            </Link>
                          </Button>
                        </TableCell>
                      </TableRow>
                    ))}
                </TableBody>
              </Table>
            </div>
          </TabsContent>
          <TabsContent value="completed">
            {/* Contenido similar para órdenes completadas */}
            <div className="rounded-md border">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>OT</TableHead>
                    <TableHead>Activo</TableHead>
                    <TableHead>Tipo</TableHead>
                    <TableHead>Proveedor</TableHead>
                    <TableHead>Fecha</TableHead>
                    <TableHead className="text-right">Acciones</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {filteredOrders
                    .filter((order) => order.status === "Completado")
                    .map((order) => (
                      <TableRow key={order.id}>
                        <TableCell className="font-medium">{order.id}</TableCell>
                        <TableCell>{order.asset}</TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.type === "Preventivo"
                                ? "outline"
                                : order.type === "Correctivo"
                                  ? "destructive"
                                  : "secondary"
                            }
                          >
                            {order.type}
                          </Badge>
                        </TableCell>
                        <TableCell>{order.provider}</TableCell>
                        <TableCell>{formatDate(order.date)}</TableCell>
                        <TableCell className="text-right">
                          <Button variant="ghost" size="sm" asChild>
                            <Link href={`/ordenes/${order.id}`}>
                              <FileText className="h-4 w-4" />
                            </Link>
                          </Button>
                        </TableCell>
                      </TableRow>
                    ))}
                </TableBody>
              </Table>
            </div>
          </TabsContent>
          <TabsContent value="warranty">
            {/* Contenido similar para órdenes de garantía */}
            <div className="rounded-md border">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>OT</TableHead>
                    <TableHead>Activo</TableHead>
                    <TableHead>Tipo</TableHead>
                    <TableHead>Proveedor</TableHead>
                    <TableHead>Estado</TableHead>
                    <TableHead>Fecha</TableHead>
                    <TableHead className="text-right">Acciones</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {filteredOrders
                    .filter((order) => order.warranty)
                    .map((order) => (
                      <TableRow key={order.id}>
                        <TableCell className="font-medium">{order.id}</TableCell>
                        <TableCell>{order.asset}</TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.type === "Preventivo"
                                ? "outline"
                                : order.type === "Correctivo"
                                  ? "destructive"
                                  : "secondary"
                            }
                          >
                            {order.type}
                          </Badge>
                        </TableCell>
                        <TableCell>{order.provider}</TableCell>
                        <TableCell>
                          <Badge
                            variant={
                              order.status === "Completado"
                                ? "default"
                                : order.status === "En progreso"
                                  ? "secondary"
                                  : order.status === "Cancelado"
                                    ? "destructive"
                                    : "outline"
                            }
                          >
                            {order.status}
                          </Badge>
                        </TableCell>
                        <TableCell>{formatDate(order.date)}</TableCell>
                        <TableCell className="text-right">
                          <Button variant="ghost" size="sm" asChild>
                            <Link href={`/ordenes/${order.id}`}>
                              <Eye className="h-4 w-4" />
                            </Link>
                          </Button>
                        </TableCell>
                      </TableRow>
                    ))}
                </TableBody>
              </Table>
            </div>
          </TabsContent>
        </Tabs>
      </CardContent>
      <CardFooter className="flex justify-between">
        <div className="text-sm text-muted-foreground">
          Mostrando {filteredOrders.length} de {workOrders.length} órdenes
        </div>
        <div className="flex items-center gap-2">
          <Button variant="outline" size="sm" disabled>
            Anterior
          </Button>
          <Button variant="outline" size="sm">
            Siguiente
          </Button>
        </div>
      </CardFooter>
    </Card>
  )
}

// Función para formatear fechas
function formatDate(dateString: string) {
  const date = new Date(dateString)
  return date.toLocaleDateString("es-ES", {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
  })
}

// Datos de ejemplo para las órdenes de trabajo
const workOrdersExample: WorkOrder[] = [
  {
    id: "OT-2305",
    asset: "Compresor Industrial #12",
    type: "Correctivo",
    priority: "Alta",
    provider: "TecnoServicios S.A.",
    status: "En progreso",
    date: "2023-06-15",
    warranty: true,
    assignedTo: "Carlos Méndez",
  },
  {
    id: "OT-2304",
    asset: "Montacargas Eléctrico #3",
    type: "Preventivo",
    priority: "Media",
    provider: "LogiMant Ltda.",
    status: "Programado",
    date: "2023-06-18",
    warranty: false,
    assignedTo: "Ana Gómez",
  },
  {
    id: "OT-2303",
    asset: "Sistema HVAC Planta 2",
    type: "Garantía",
    priority: "Alta",
    provider: "ClimaControl",
    status: "Pendiente",
    date: "2023-06-14",
    warranty: true,
    assignedTo: "Roberto Sánchez",
  },
  {
    id: "OT-2302",
    asset: "Línea de Producción #1",
    type: "Preventivo",
    priority: "Baja",
    provider: "Interno",
    status: "Completado",
    date: "2023-06-12",
    warranty: false,
    assignedTo: "María Torres",
  },
  {
    id: "OT-2301",
    asset: "Generador Eléctrico Principal",
    type: "Correctivo",
    priority: "Crítica",
    provider: "EnergySolutions",
    status: "Completado",
    date: "2023-06-10",
    warranty: true,
    assignedTo: "Javier López",
  },
  {
    id: "OT-2300",
    asset: "Caldera Industrial #2",
    type: "Correctivo",
    priority: "Crítica",
    provider: "ThermalTech",
    status: "Cancelado",
    date: "2023-06-08",
    warranty: false,
    assignedTo: "Pedro Ramírez",
  },
]
